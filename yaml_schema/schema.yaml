---
intersight: include('intersight', required=False)
defaults: any(required=False)
---
adapter_configuration:
  description: str(min=0, max=1024, matches='^$|^[a-zA-Z0-9]+[\\x00-\\xFF]*$', required=False) # @title(Description) @description(A Description for the Policy)
  name: str(min=1, max=64, matches='^([a-zA-Z0-9][a-zA-Z0-9_\\.:-]{0,62})?[a-zA-Z0-9]$', required=True) # @title(Name) @description(Name of the Policy)
  tags: list(include('mo.tags'), required=False) # @title(Tags) @description(An arbitrary key and value pair that can be used to tag REST resources and organize managed objects by\nassigning meta-data tags to any object.\n\nRequired Attributes:\n  * key\n  * value)
ip:
  assignment_order: enum('default', 'sequential', required=False)
  description: str(min=0, max=1024, matches='^$|^[a-zA-Z0-9]+[\\x00-\\xFF]*$', required=False) # @title(Description) @description(A Description for the Pool)
  ipv4_blocks: list(include('ip.ipv4_blocks'), required=False) # @title(IPv4 Blocks) @description(A block of IPv4 addresses.  You can configure gateway, netmask, primary DNS, and secondary DNS either at the block level or global to the pool with the ipv4_configuration setting.  Configure all blocks via the same method.  Mixing is not supported.\n\nRequired Attributes:\n  * from\n\nOptional Attributes:\n  * gateway\n  * netmask\n  * primary_dns\n  * secondary_dns\n  * size\n  * to\n\nNote - Only assign either size or to, not both.)
  ipv4_configuration: list(include('ip.ipv4_configuration'), required=False) # @title(IPv4 Configuration) @description(Network interface configuration data for IPv4 interfaces. Netmask, Gateway and DNS settings.  You can configure gateway, netmask, primary DNS, and secondary DNS either at the block level or global to the pool with the ipv4_configuration setting.  Configure all blocks via the same method.  Mixing is not supported.\n\nRequired Attributes:\n  * gateway\n  * netmask\n\nOptional Attributes:\n  * primary_dns\n  * secondary_dns.)
  ipv6_blocks: list(include('ip.ipv6_blocks'), required=False) # @title(IPv6 Blocks) @description(A block of IPv6 addresses.  You can configure gateway, prefix, primary DNS, and secondary DNS either at the block level or global to the pool with the ipv6_configuration setting.  Configure all blocks via the same method.  Mixing is not supported.\n\nRequired Attributes:\n  * from\n\nOptional Attributes:\n  * gateway\n  * netmask\n  * primary_dns\n  * secondary_dns\n  * size\n  * to\n\nNote - Only assign either size or to, not both.)
  ipv6_configuration: list(include('ip.ipv6_configuration'), required=False) # @title(IPv6 Configuration) @description(Network interface configuration data for IPv6 interfaces. Prefix, Gateway and DNS settings.  You can configure gateway, prefix, primary DNS, and secondary DNS either at the block level or global to the pool with the ipv6_configuration setting.  Configure all blocks via the same method.  Mixing is not supported.\n\nRequired Attributes:\n  * gateway\n  * prefix\n\nOptional Attributes:\n  * primary_dns\n  * secondary_dns.)
  name: str(min=1, max=64, matches='^([a-zA-Z0-9][a-zA-Z0-9_\\.:-]{0,62})?[a-zA-Z0-9]$', required=True) # @title(Name) @description(Name of the Pool)
  tags: list(include('mo.tags'), required=False) # @title(Tags) @description(An arbitrary key and value pair that can be used to tag REST resources and organize managed objects by\nassigning meta-data tags to any object.\n\nRequired Attributes:\n  * key\n  * value)
ip.ipv4_blocks:
  from: str(min=7, max=15, matches='^(([1-9]|[1-9][0-9]{1}|1[0-9]{2}|2[0-1][0-9]|22[0-3])\\.)(([01]?[0-9]?[0-9]|2([0-4][0-9]|5[0-5]))\\.){2}([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])$', required=True) # @title(Starting IP Address) @description(First IPv4 address of the block.  Example `198.18.0.10`.)
  gateway: str(min=7, max=15, matches='^0.0.0.0|(([1-9]|[1-9][0-9]{1}|1[0-9]{2}|2[0-1][0-9]|22[0-3])\\.)(([01]?[0-9]?[0-9]|2([0-4][0-9]|5[0-5]))\\.){2}([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])$', required=False) # @title(Gateway) @description(Gateway to assign to the pool.  Example `198.18.0.1`.)
  netmask: str(min=7, max=15, matches='^(([1-9]|[1-9][0-9]{1}|1[0-9]{2}|2[0-4][0-9]|25[0-5])\\.)(([01]?[0-9]?[0-9]|2([0-4][0-9]|5[0-5]))\\.){2}([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])$', required=False) # @title(Netmask) @description(A subnet mask is a 32-bit number that masks an IP address and divides the IP address into network address and host address.  Example `255.255.255.0`.)
  primary_dns: str(min=7, max=15, matches='^(([1-9]|[1-9][0-9]{1}|1[0-9]{2}|2[0-1][0-9]|22[0-3])\\.)(([01]?[0-9]?[0-9]|2([0-4][0-9]|5[0-5]))\\.){2}([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])$', required=False) # @title(Primary DNS) @description(IP Address of the primary Domain Name System (DNS) server.  Example `208.67.220.220`.)
  secondary_dns: str(min=7, max=15, matches='^(([1-9]|[1-9][0-9]{1}|1[0-9]{2}|2[0-1][0-9]|22[0-3])\\.)(([01]?[0-9]?[0-9]|2([0-4][0-9]|5[0-5]))\\.){2}([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])$', required=False) # @title(Secondary DNS) @description(IP Address of the secondary Domain Name System (DNS) server.  Example `208.67.222.222`.)
  size: int(min=1, max=1024, required=False) # @title(Pool Size) @description(Size of the Pool.  Allowed range is `1-1024`.)
  to: str(min=7, max=15, matches='^(([1-9]|[1-9][0-9]{1}|1[0-9]{2}|2[0-1][0-9]|22[0-3])\\.)(([01]?[0-9]?[0-9]|2([0-4][0-9]|5[0-5]))\\.){2}([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])$', required=False) # @title(Ending IP Address) @description(Last IPv4 address of the block.  Example `198.18.0.255`.)
ip.ipv4_configuration:
  gateway: str(min=7, max=15, matches='^0.0.0.0|(([1-9]|[1-9][0-9]{1}|1[0-9]{2}|2[0-1][0-9]|22[0-3])\\.)(([01]?[0-9]?[0-9]|2([0-4][0-9]|5[0-5]))\\.){2}([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])$', required=True) # @title(Gateway) @description(Gateway to assign to the pool.  Example `198.18.0.1`.)
  netmask: str(min=7, max=15, matches='^(([1-9]|[1-9][0-9]{1}|1[0-9]{2}|2[0-4][0-9]|25[0-5])\\.)(([01]?[0-9]?[0-9]|2([0-4][0-9]|5[0-5]))\\.){2}([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])$', required=True) # @title(Netmask) @description(A subnet mask is a 32-bit number that masks an IP address and divides the IP address into network address and host address.  Example `255.255.255.0`.)
  primary_dns: str(min=7, max=15, matches='^(([1-9]|[1-9][0-9]{1}|1[0-9]{2}|2[0-1][0-9]|22[0-3])\\.)(([01]?[0-9]?[0-9]|2([0-4][0-9]|5[0-5]))\\.){2}([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])$', required=False) # @title(Primary DNS) @description(IP Address of the primary Domain Name System (DNS) server.  Example `208.67.220.220`.)
  secondary_dns: str(min=7, max=15, matches='^(([1-9]|[1-9][0-9]{1}|1[0-9]{2}|2[0-1][0-9]|22[0-3])\\.)(([01]?[0-9]?[0-9]|2([0-4][0-9]|5[0-5]))\\.){2}([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])$', required=False) # @title(Secondary DNS) @description(IP Address of the secondary Domain Name System (DNS) server.  Example `208.67.222.222`.)
global_settings:
  intersight_fqdn: str(min=1, max=255, matches='^((([1-9]|[1-9][0-9]{1}|1[0-9]{2}|2[0-1][0-9]|22[0-3])\\.)(([01]?[0-9]?[0-9]|2([0-4][0-9]|5[0-5]))\\.){2}([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])$|^(?=.{1,255}$)[0-9A-Za-z](?:(?:[0-9A-Za-z]|-){0,61}[0-9A-Za-z])?(?:\\.[0-9A-Za-z](?:(?:[0-9A-Za-z]|-){0,61}[0-9A-Za-z])?)*\\.?$|^(([a-fA-F]|[a-fA-F][a-fA-F0-9\\-]*[a-fA-F0-9])\\.)*([A-Fa-f]|[A-Fa-f][A-Fa-f0-9\\-]*[A-Fa-f0-9])$|^(?:(?:(?:(?:(?:(?:(?:[0-9a-fA-F]{1,4})):){6})(?:(?:(?:(?:(?:[0-9a-fA-F]{1,4})):(?:(?:[0-9a-fA-F]{1,4})))|(?:(?:(?:(?:(?:25[0-5]|(?:[1-9]|1[0-9]|2[0-4])?[0-9]))\\.){3}(?:(?:25[0-5]|(?:[1-9]|1[0-9]|2[0-4])?[0-9])))))))|(?:(?:::(?:(?:(?:[0-9a-fA-F]{1,4})):){5})(?:(?:(?:(?:(?:[0-9a-fA-F]{1,4})):(?:(?:[0-9a-fA-F]{1,4})))|(?:(?:(?:(?:(?:25[0-5]|(?:[1-9]|1[0-9]|2[0-4])?[0-9]))\\.){3}(?:(?:25[0-5]|(?:[1-9]|1[0-9]|2[0-4])?[0-9])))))))|(?:(?:(?:(?:(?:[0-9a-fA-F]{1,4})))?::(?:(?:(?:[0-9a-fA-F]{1,4})):){4})(?:(?:(?:(?:(?:[0-9a-fA-F]{1,4})):(?:(?:[0-9a-fA-F]{1,4})))|(?:(?:(?:(?:(?:25[0-5]|(?:[1-9]|1[0-9]|2[0-4])?[0-9]))\\.){3}(?:(?:25[0-5]|(?:[1-9]|1[0-9]|2[0-4])?[0-9])))))))|(?:(?:(?:(?:(?:(?:[0-9a-fA-F]{1,4})):){0,1}(?:(?:[0-9a-fA-F]{1,4})))?::(?:(?:(?:[0-9a-fA-F]{1,4})):){3})(?:(?:(?:(?:(?:[0-9a-fA-F]{1,4})):(?:(?:[0-9a-fA-F]{1,4})))|(?:(?:(?:(?:(?:25[0-5]|(?:[1-9]|1[0-9]|2[0-4])?[0-9]))\\.){3}(?:(?:25[0-5]|(?:[1-9]|1[0-9]|2[0-4])?[0-9])))))))|(?:(?:(?:(?:(?:(?:[0-9a-fA-F]{1,4})):){0,2}(?:(?:[0-9a-fA-F]{1,4})))?::(?:(?:(?:[0-9a-fA-F]{1,4})):){2})(?:(?:(?:(?:(?:[0-9a-fA-F]{1,4})):(?:(?:[0-9a-fA-F]{1,4})))|(?:(?:(?:(?:(?:25[0-5]|(?:[1-9]|1[0-9]|2[0-4])?[0-9]))\\.){3}(?:(?:25[0-5]|(?:[1-9]|1[0-9]|2[0-4])?[0-9])))))))|(?:(?:(?:(?:(?:(?:[0-9a-fA-F]{1,4})):){0,3}(?:(?:[0-9a-fA-F]{1,4})))?::(?:(?:[0-9a-fA-F]{1,4})):)(?:(?:(?:(?:(?:[0-9a-fA-F]{1,4})):(?:(?:[0-9a-fA-F]{1,4})))|(?:(?:(?:(?:(?:25[0-5]|(?:[1-9]|1[0-9]|2[0-4])?[0-9]))\\.){3}(?:(?:25[0-5]|(?:[1-9]|1[0-9]|2[0-4])?[0-9])))))))|(?:(?:(?:(?:(?:(?:[0-9a-fA-F]{1,4})):){0,4}(?:(?:[0-9a-fA-F]{1,4})))?::)(?:(?:(?:(?:(?:[0-9a-fA-F]{1,4})):(?:(?:[0-9a-fA-F]{1,4})))|(?:(?:(?:(?:(?:25[0-5]|(?:[1-9]|1[0-9]|2[0-4])?[0-9]))\\.){3}(?:(?:25[0-5]|(?:[1-9]|1[0-9]|2[0-4])?[0-9])))))))|(?:(?:(?:(?:(?:(?:[0-9a-fA-F]{1,4})):){0,5}(?:(?:[0-9a-fA-F]{1,4})))?::)(?:(?:[0-9a-fA-F]{1,4})))|(?:(?:(?:(?:(?:(?:[0-9a-fA-F]{1,4})):){0,6}(?:(?:[0-9a-fA-F]{1,4})))?::)))))$', required=False) # @title(Intersight FQDN) @description(Intersight Fully Qualified Domain Name.)
  tags: list(include('mo.tags'), required=False) # @title(Tags) @description(An arbitrary key and value pair that can be used to tag REST resources and organize managed objects by\nassigning meta-data tags to any object.\n\nRequired Attributes:\n  * key\n  * value)
intersight:
  global_settings: include('global_settings', required=False) # @title(Global Settings) @description(Network As Code Global Settings for Provider and Modules.\n\nRequired Attributes are:\n  * intersight_fqdn\n\nOptional Attributes:\n  * tags)
  organizations: list(include('organizations'), required=True) # @title(Intersight Organization - Intersight API Uri':' organization/Organizations) @description(Intersight Organization Definitions.\n\nRequired Attributes are:\n  * name\n\nOptional Attributes are:\n  * create_organization\n  * description\n  * organizations_to_share_with\n  * policies\n  * pools\n  * profiles\n  * resource_groups\n  * templates)
mo.tags:
  key: str(min=1, max=128, matches='^[\\S]+$', required=True) # @title(Key) @intersight_api(Key) @description(The tag key for which usage information is provided.)
  value: str(min=1, max=128, matches='^[\\S]+$', required=True) # @title(Value) @intersight_api(Value) @description(The tag value for which usage information is provided.)
organizations:
  create_organization: bool(default=False, required=False) # @title(Create Organization) @description(Default is `false`.  Flag to tell the script to Create the organization or read as data source.)
  description: str(min=1, max=1024, matches='^$|^[a-zA-Z0-9]+[\\x00-\\xFF]*$', required=False) # @title(Description) @description(A Description for the Organization)
  name: str(min=1, max=64, matches='^[a-zA-Z0-9_\\.:-]{1,64}$', required=True) # @title(Organization Name) @description(Name for the Organization)
  organizations_to_share_with: list(include('organizations_to_share_with', required=False)) # @title(Shared Organizations) @description(List of Organization(s) to Add as Shared Organizations.)
  policies: include('policies', required=False) # @title(Intersight Policies) @description(Policies in Cisco Intersight provide different configurations for UCS servers, including BIOS settings, firmware versions, disk group creation, Simple Mail Transfer Protocol (SMTP), Intelligent Platform Management Interface (IPMI) settings, and more. A policy that is once configured can be assigned to any number of servers to provide a configuration baseline. Policies in Cisco Intersight are native to the application and are not directly imported from the UCS Systems. Policy-based configuration with Server Profiles is a Cisco Intersight Essentials functionality.\nOptions are:\n\n  * adapter_configuration\n  * bios\n  * boot_order\n  * certificate_management\n  * drive_security\n  * device_connector\n  * ethernet_adapter\n  * ethernet_network\n  * ethernet_network_control\n  * ethernet_network_group\n  * ethernet_qos\n  * fc_zone\n  * fibre_channel_adapter\n  * fibre_channel_network\n  * fibre_channel_qos\n  * firmware\n  * flow_control\n  * imc_access\n  * ipmi_over_lan\n  * iscsi_adapter\n  * iscsi_boot\n  * iscsi_static_target\n  * lan_connectivity\n  * ldap\n  * link_aggregation\n  * link_control\n  * local_user\n  * memory\n  * multicast\n  * network_connectivity\n  * ntp\n  * persistent_memory\n  * port\n  * power\n  * san_connectivity\n  * sd_card\n  * serial_over_lan\n  * scrub\n  * smtp\n  * snmp\n  * ssh\n  * storage\n  * switch_control\n  * syslog\n  * system_qos\n  * thermal\n  * vhba_template\n  * virtual_kvm\n  * virtual_media\n  * vlan\n  * vnic_template\n  * vsan)
  pools: include('pools', required=False) # @title(Intersight Pools) @description(Pools are the basic building blocks for uniquely identifying hardware resources. As the basis for the UCS management model, they allow Service Profiles to be associated with any blade server, while still providing the exact same ID and presentation to the upstream LAN or SAN. If a pool is actively associated with a profile, the pool cannot be deleted.\nOptions are:\n\n  * ip\n  * iqn\n  * resource\n  * uuid\n  * wwnn\n  * wwpn)
  profiles: include('profiles', required=False) # @title(Intersight Profiles) @description(Profiles in Cisco Intersight assign the Policy Configurations to UCS chassis/domains/servers, Policy-based configuration with Chassis/Domain/Server Profiles is a Cisco Intersight Essentials functionality.\n\nOptions are:\n  * chassis\n  * domain\n  * server)
  resource_groups: list(include('resource_groups')) # @title(Intersight Resource Groups) @description(A List of Resource Groups to Assign to the Organization.\n\nRequired Attributes:\n  * name\n\nOptional Attributes:\n  * description\n  * resources.)
  templates: include('templates', required=False) # @title(Intersight Templates) @description(Use this section to Create or Define UCS Templates.  Options are:\n  * chassis\n  * domain\n  * name_prefix\n  * name_suffix\n  * server)
organizations_to_share_with: str(min=1, max=64, matches='^[a-zA-Z0-9_\\.:-]{1,64}$', required=True) # @title(Shared Organization) @description(Organization to Add as a Shared Organization.)
pools:
  ip: list(include('ip'), required=False) # @title(IP Pool) @description(An IP pool is a sequential range of IP addresses within a certain network. You can assign multiple pool blocks within a pool configuration.\n\nRequired Attributes:\n  * name\n\nOptional Attributes:\n  * assignment_order\n  * description\n  * ipv4_blocks\n  * ipv4_configuration\n  * ipv6_blocks\n  * ipv6_configuration\n  * tags)
profiles:
  server: include('profiles.server', required=False)
profiles.server:
  description: str(min=0, max=1024, matches='^$|^[a-zA-Z0-9]+[\\x00-\\xFF]*$', required=False) # @title(Description) @description(A Description for the Profile)
  name: str(min=1, max=64, matches='^([a-zA-Z0-9][a-zA-Z0-9_\\.:-]{0,62})?[a-zA-Z0-9]$', required=True) # @title(Name) @description(Name of the Profile)
  tags: list(include('mo.tags'), required=False) # @title(Tags) @description(An arbitrary key and value pair that can be used to tag REST resources and organize managed objects by\nassigning meta-data tags to any object.\n\nRequired Attributes:\n  * key\n  * value)
templates:
  server: include('templates.server', required=False)
templates.server:
  description: str(min=0, max=1024, matches='^$|^[a-zA-Z0-9]+[\\x00-\\xFF]*$', required=False) # @title(Description) @description(A Description for the Template)
  name: str(min=1, max=64, matches='^([a-zA-Z0-9][a-zA-Z0-9_\\.:-]{0,62})?[a-zA-Z0-9]$', required=True) # @title(Name) @description(Name of the Template)
  tags: list(include('mo.tags'), required=False) # @title(Tags) @description(An arbitrary key and value pair that can be used to tag REST resources and organize managed objects by\nassigning meta-data tags to any object.\n\nRequired Attributes:\n  * key\n  * value)
